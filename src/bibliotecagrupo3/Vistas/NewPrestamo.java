/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bibliotecagrupo3.Vistas;

import bibliotecaGrupo3.Controllers.Conexion;
import bibliotecagrupo3.Controllers.EjemplarData;
import bibliotecagrupo3.Controllers.Helpers;
import bibliotecagrupo3.Controllers.LectorData;
import bibliotecagrupo3.Controllers.PrestamoData;
import bibliotecagrupo3.Models.Ejemplar;
import bibliotecagrupo3.Models.Lector;
import bibliotecagrupo3.Models.Multa;
import bibliotecagrupo3.Models.Prestamo;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Rodrigo
 */
public class NewPrestamo extends javax.swing.JInternalFrame {
    private PrestamoData pData;
    private LectorData lData;
    private EjemplarData eData;
    private boolean verifiedDni;
    private boolean verifiedEjemplar;
    private Lector lector;
    private Ejemplar ejemplar;
    
    public NewPrestamo(Conexion conexion) throws SQLException {
        initComponents();
        
        pData = new PrestamoData(conexion);
        lData = new LectorData(conexion);
        eData = new EjemplarData(conexion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFDniLector = new javax.swing.JTextField();
        jBVerificarLector = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jTFIdEjemplar = new javax.swing.JTextField();
        jBVerificarEjemplar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jBLimpiar = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();

        setTitle("Nuevo Prestamo");

        jLabel1.setText("DNI del lector");

        jTFDniLector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFDniLectorActionPerformed(evt);
            }
        });

        jBVerificarLector.setText("VERIFICAR");
        jBVerificarLector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerificarLectorActionPerformed(evt);
            }
        });

        jLabel2.setText("Id Ejemplar");

        jBVerificarEjemplar.setText("VERIFICAR");
        jBVerificarEjemplar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerificarEjemplarActionPerformed(evt);
            }
        });

        jBSalir.setText("SALIR");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jBLimpiar.setText("LIMPIAR");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jBGuardar.setText("GUARDAR");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTFDniLector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jBVerificarLector)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(jBLimpiar)
                                .addGap(18, 18, 18)
                                .addComponent(jBSalir))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(65, 65, 65)
                                .addComponent(jTFIdEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jBVerificarEjemplar)))
                        .addContainerGap(33, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFDniLector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVerificarLector)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFIdEjemplar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBVerificarEjemplar)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSalir)
                    .addComponent(jBLimpiar)
                    .addComponent(jBGuardar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFDniLectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFDniLectorActionPerformed

    }//GEN-LAST:event_jTFDniLectorActionPerformed

    private void jBVerificarLectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerificarLectorActionPerformed
        String dniString = jTFDniLector.getText();
        
        int dni =  Helpers.parseStringToInt(dniString, "Para buscar un lector necesitamos su DNI.", "El campo dni solo admite n√∫meros.");
        
        if(dni == 0) return;
        
        Lector lector = lData.buscarLector(dni);
        
        if(lector == null) return;
        
        JOptionPane.showMessageDialog(null,"Felicidades! El lector esta disponible.");
        verifiedDni = true;
        this.lector = lector;
    }//GEN-LAST:event_jBVerificarLectorActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        if(!verifiedDni || !verifiedEjemplar){
            JOptionPane.showMessageDialog(null,"El lector o el ejemplar no estan disponibles en este momento.");
            return;
        }
        
        ArrayList<Prestamo> prestamos = pData.getByLector(this.lector);
        
        ArrayList<Ejemplar> ejemplaresParaDarDeBaja = new ArrayList<>();
        
        int countPrestamosVencidos = 0;
        
        boolean darDeBajaLector = false;
        
        int countPrestamosActivos = 0;
        
        //reviso los prestamos verificando si puede o no concretarse el prestamo
        for(Prestamo prestamo: prestamos){
            Multa multa = prestamo.getMulta();
            
            System.out.println("esta es la multa: " + multa);
            
            //si la multa si existe, verifico si ya paso
            if(multa != null){
                if(multa.getFecha_fin().isAfter(LocalDate.now())){
                    JOptionPane.showMessageDialog(null,"El lector tiene una multa activa por lo que no podra solicitar un prestamo.");
                    return;
                }
            }
            
            if(!prestamo.isEstado()) continue;
            
            if(prestamo.getFecha_devolucion() == null){
                countPrestamosActivos++;
            }
            
            LocalDate fechaPlus30 = prestamo.getFecha().plusDays(30);
            LocalDate fechaPlus90 = prestamo.getFecha().plusDays(90);
            
            if(fechaPlus30.isBefore(LocalDate.now())){
                ejemplaresParaDarDeBaja.add(prestamo.getEjemplar());
                
                if(fechaPlus90.isBefore(LocalDate.now())) darDeBajaLector = true;
                
                countPrestamosVencidos ++;
                
                continue;
            }
        }
        
        if(countPrestamosVencidos>0){
            JOptionPane.showMessageDialog(null, "El lector tiene " + countPrestamosVencidos + " prestamo/s vencido/s. Debera devolver el/los libro/s y luego esperar los dias de la multa que le correspondan");
            
            if(darDeBajaLector){
                JOptionPane.showMessageDialog(null, "El lector tiene un prestamo vencido hace mas de 90 dias. Por lo que sera dado de baja.");
                    
                try {
                    lData.desactivarLector(this.lector.getDni());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NewPrestamo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(NewPrestamo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            for(Ejemplar ejemplar: ejemplaresParaDarDeBaja){
                ejemplar.setEstado("retrasado");
                eData.actualizarEjemplar(ejemplar);
            }
            
            return;
        }
        
        if(countPrestamosActivos>2){
            JOptionPane.showMessageDialog(null,"El lector ya tiene 3 prestamos en este momento, por lo que no podra solicitar un prestamo.");
            return;
        }
        
        Prestamo prestamo = new Prestamo(this.ejemplar, this.lector);
        
        prestamo.getEjemplar().setEstado("prestado");
        
        eData.actualizarEjemplar(prestamo.getEjemplar());
        
        pData.crear(prestamo);
        
        limpiar();
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBVerificarEjemplarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerificarEjemplarActionPerformed
        String idEjemplarString = jTFIdEjemplar.getText();
        
        int idEjemplar =  Helpers.parseStringToInt(idEjemplarString, "Para buscar un ejemplar necesitamos su ID.", "El campo ID solo admite n√∫meros.");
        
        if(idEjemplar == 0) return;
        
        Ejemplar ejemplar = eData.buscarEjemplar(idEjemplar);
        
        if(ejemplar == null) return;
        
        if(!ejemplar.getEstado().equals("disponible")){
            JOptionPane.showMessageDialog(null,"Lo sentimos. Pero el ejemplar que esta buscando no esta disponible en este momento.");
            return;
        }
        
        JOptionPane.showMessageDialog(null,"Felicidades! El ejemplar esta disponible.");
        verifiedEjemplar = true;
        this.ejemplar = ejemplar;
    }//GEN-LAST:event_jBVerificarEjemplarActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void limpiar(){
        jTFDniLector.setText("");
        jTFIdEjemplar.setText("");
        verifiedDni = false;
        verifiedEjemplar = false;
        lector = null;
        ejemplar = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JButton jBVerificarEjemplar;
    private javax.swing.JButton jBVerificarLector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTFDniLector;
    private javax.swing.JTextField jTFIdEjemplar;
    // End of variables declaration//GEN-END:variables
}
