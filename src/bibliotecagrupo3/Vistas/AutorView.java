/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bibliotecagrupo3.Vistas;

import bibliotecaGrupo3.Controllers.Conexion;
import bibliotecagrupo3.Controllers.AutorData;
import bibliotecagrupo3.Models.Autor;
import java.sql.Date;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Nahu
 */
public class AutorView extends javax.swing.JInternalFrame {

    private AutorData autorData;

    public AutorView(Conexion con) throws SQLException {
        initComponents();
        
        Date fecha2 = new Date(105, 0,1);
        autorData = new AutorData(con);
        jdcFn.setDate(fecha2);
        ((JTextField) this.jdcFn.getDateEditor()).setEditable(false);
        //jdcFn.setDate(Date.valueOf(LocalDate.now()));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfDni = new javax.swing.JTextField();
        jtfApellido = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jtfNacionalidad = new javax.swing.JTextField();
        jbGuardar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jdcFn = new com.toedter.calendar.JDateChooser();

        jTextField1.setText("jTextField1");

        setBackground(new java.awt.Color(193, 252, 250));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("~AUTOR~");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("DNI:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("NOMBRE:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("FECHA NACIMIENTO:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("APELLIDO:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("NACIONALIDAD:");

        jbGuardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbGuardar.setText("GUARDAR");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbBorrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbBorrar.setText("BORRAR");
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbModificar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbModificar.setText("MODIFICAR");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbBuscar.setText("BUSCAR");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbLimpiar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbLimpiar.setText("LIMPIAR CAMPOS");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(218, 78, 78));
        jbSalir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbSalir.setText("SALIR");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jtfDni, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jtfNacionalidad, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jtfApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(jdcFn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(jbBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(jbModificar)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbLimpiar)
                            .addComponent(jbSalir)
                            .addComponent(jbBuscar))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jdcFn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbBorrar)
                    .addComponent(jbModificar)
                    .addComponent(jbSalir))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        /////FUNCIONA/////
        String dniT = jtfDni.getText();
        if (dniT.equals("")) {
            JOptionPane.showMessageDialog(null, "Es necesario que ingrese un dni para hacer la busqueda");
            return;
        }
        int dni = 0;
        try {
            dni = Integer.parseInt(dniT);
        } catch (NumberFormatException n) {
            JOptionPane.showMessageDialog(null, "El dni solo puede contener numeros");
            return;
        }
        Autor autor = null;
        autor = autorData.buscarAutor(dni);
        if (autor == null) {
            return;
        }
        jtfDni.setText("" + autor.getDni());
        jtfNombre.setText(autor.getNombre());
        jtfApellido.setText(autor.getApellido());
        jdcFn.setDate(Date.valueOf(autor.getFecha_nac()));
        jtfNacionalidad.setText(autor.getNacionalidad());
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        /////FUNCIONA/////
        Autor autor = new Autor();
        String dniT = jtfDni.getText();
        if (dniT.equals("")) {
            JOptionPane.showMessageDialog(null, "El dni es requerido para guardar");
            return;
        }
        int dni = 0;
        try {
            dni = Integer.parseInt(dniT);
        } catch (NumberFormatException n) {
            JOptionPane.showMessageDialog(null, "El dni del autor solo admite numeros");
            return;
        }
        autor.setDni(dni);
        /////////////////
        String nombre = jtfNombre.getText();
        if (nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "El nombre es requerido");
            return;
        }

        autor.setNombre(nombre);
        /////////////////
        String apellido = jtfApellido.getText();
        if (apellido.equals("")) {
            JOptionPane.showMessageDialog(null, "El apellido es requerido");
            return;
        }
        autor.setApellido(apellido);
        ////////////////
        String nacionalidad = jtfNacionalidad.getText();
        if (nacionalidad.equals("")) {
            JOptionPane.showMessageDialog(null, "La nacionalidad es necesaria");
            return;
        }
        autor.setNacionalidad(nacionalidad);
        ////////////////
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fecha = formato.format(jdcFn.getDate());
        LocalDate fecha_nac = LocalDate.parse(fecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
  
        if(fecha_nac.getYear()>1500&&fecha_nac.getYear()<2005){
        autor.setFecha_nac(fecha_nac);
        autorData.guardarAutor(autor);
            
        }else{
                JOptionPane.showMessageDialog(null, "No se cumple con la fecha de nacimiento del escritor tiene que tener un rango de 1500-2005");
                return;
            }
        limpiar();

        ////////////////

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed
    public void limpiar() {
        jtfDni.setText("");
        jtfNombre.setText("");
        jtfApellido.setText("");
        jdcFn.setDate(Date.valueOf(LocalDate.now()));
        jtfNacionalidad.setText("");
    }
    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        /////FUNCIONA/////
        try {
            int dni = Integer.parseInt(jtfDni.getText());
            autorData.eliminarAutor(dni);
            limpiar();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "El dni tiene que ser un numero valido");

        }
    }//GEN-LAST:event_jbBorrarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        Autor autor=new Autor();
        //////////Busco cuales son los datos del autor que quiero modificar////////// 
        //pido que primero haga la busqueda asi no verifico varias veces x cual es el campo que quiere cambiar y tambien sirve para que pueda ver cuales son los datos cargados
        
        String dniT = jtfDni.getText();
         if (dniT.equals("")) {
            JOptionPane.showMessageDialog(null, "El dni es requerido, con el dni puede buscar los demas datos del autor");
            return;
        }
        int dni = 0;
        try {
            dni = Integer.parseInt(dniT);
        } catch (NumberFormatException n) {
            JOptionPane.showMessageDialog(null, "El dni del autor solo admite numeros");
            return;
        }
        autor.setDni(dni);
        
        
        //////////NOMBRE/////////
        String nombre = jtfNombre.getText();
        if(nombre.equals("")){
            JOptionPane.showMessageDialog(null,"El nombre es requerido.");
            return;
        }
        autor.setNombre(nombre);
        //////////APELLIDO/////////
        String apellido = jtfApellido.getText();
        if(apellido.equals("")){
            JOptionPane.showMessageDialog(null,"El apellido es requerido.");
            return;
        }
        autor.setApellido(apellido);
        //////////FECHA NACIMIENTO/////////
        
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fecha = formato.format(jdcFn.getDate());
        LocalDate fecha_nac = LocalDate.parse(fecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        autor.setFecha_nac(fecha_nac);
        //////////NACIONALIDAD/////////
        String nacionalidad = jtfNacionalidad.getText();
        if(nacionalidad.equals("")){
            JOptionPane.showMessageDialog(null,"La nacionalidad es requerida.");
            return;
        }
        autor.setNacionalidad(nacionalidad);
        
        autorData.modificarAutor(autor);
    }//GEN-LAST:event_jbModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private com.toedter.calendar.JDateChooser jdcFn;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfNacionalidad;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables
}
